    1  ssh-keygen -t ed25519 -C "venkatesh.rapa1@gmail.com"
    2   start the ssh-agent in the background
    3  cat /c/Users/Dell/.ssh/id_ed25519.pub
    4  ll
    5  cd gittraining_v1/
    6  git init 
    7  ls 
    8  git init
    9  cd .git
   10  ll
   11  l
   12  ll
   13  cd ..
   14  ll
   15  git commit 
   16   
   17  git --version 
   18  git help 
   19  git help pull 
   20  git help pull
   21  cd ~
   22  git help pull
   23  git config --global user.name "rapa"
   24  git config --global user.email "venkateshmcitp2@gmail.com"
   25  git config --list 
   26  pwd 
   27  cd rapa/
   28  ls
   29  ll
   30  cd ~
   31  ll
   32  cd users 
   33  cd venkat/
   34  ls
   35  ll
   36  mkdir gittraining_v1
   37  git init 
   38  cd ..
   39  ls
   40  cd gittraining_v1/
   41  git init 
   42  cd ~
   43  cd venkateshrapa 
   44  mkdir venkatesh
   45  cd venkatesh/
   46  mkdir gittraining_v1 
   47  git init 
   48  ll
   49  cd gittraining_v1/
   50  ll
   51  pwd
   52  git init 
   53  ll
   54  ls 
   55  ll
   56  pwd
   57  git commit 
   58  touch rapa
   59  ls 
   60  git status
   61  vi rapa 
   62  git status
   63  git status 
   64  git add rapa
   65  git status 
   66  git status
   67  git commit -m "first file  commit"
   68  git status 
   69  mkdir .ds_store
   70  git status 
   71  git add .ds_store/_
   72  git status 
   73  vi rapa 
   74  git status 
   75  git diff 
   76  git commit -m "Additon in first file"
   77  git status 
   78  git add .
   79  git commit -m "Additon in first file"
   80  git status 
   81  git commit -m "Additon in first file"
   82  git log
   83  touch venkat 
   84  ll
   85  vi rapa
   86  git status
   87  git status
   88  git add .
   89  git status
   90  git status
   91  git commit -m 
   92  git commmit -m "my another commit for second file"
   93  git staurs 
   94  git status 
   95  git status 
   96  git commit -m "my another commit for venkat"
   97  git status 
   98  git log 
   99  git log 
  100  git log --author "venkatesh"
  101  git log --author "venkateshmcitp2@gmail.com"
  102  git log --author "rapa"
  103  git log --author = "matt leo"
  104  git log -a = "rapa"
  105  git log -author = "rapa"
  106  git log 
  107  git log author="rapa"
  108  git log author="rapa"
  109  git log 
  110  git log --author "venkateshmcitp2@gmail.com"
  111  git log --author "rapa"
  112   
  113  cd ..
  114  cd ..
  115  pwd
  116  cd venkatesh/
  117  dir
  118  ll
  119  git clone -b main https://github.com/venkateshrapa4/gittraining_rapa.git
  120  ll
  121   cd gittraining_rapa/
  122  ll
  123  ls -a 
  124  git status 
  125  git pull 
  126  l
  127  ll
  128  vi testfile.txt 
  129  vi testfile.txt 
  130   git status 
  131  git commit -m "commit message2"
  132  git commit -am "commit message2"
  133  git push 
  134  git status
  135  ls 
  136  touch testfile.txt 
  137  vi testfile.txt 
  138  git status
  139  git push
  140  git status
  141  git commit -am "third commit"
  142  ll 
  143  cd venkatesh/
  144  ll
  145  cd gittraining_rapa/
  146  ;;
  147  ll
  148  git push
  149  git status 
  150  vi testfile.txt 
  151  git commit -am "ssh based"
  152  git push
  153  git branch
  154  ll
  155  git branch devlop 
  156  git branch
  157  git swith devlop
  158  git branch
  159  git switch devlop
  160  git branch
  161  ll
  162  touch samplefile1.txt samplefile2.txt
  163  ls
  164  echo "this is sample file 1" >> smaplefile.txt
  165  echo "this is sample file 2" >> smaplefile2.txt
  166  ls
  167  ll
  168  ll
  169  git status 
  170  git add .
  171   ls 
  172  rm -rf s*
  173  ls
  174  touch sampletestfile1.txt
  175  touch sampletestfile2.txt
  176  echo "this is sample file 1" >> sampletestfile1.txt 
  177  echo "this is sample file 1" >> sampletestfile2.txt 
  178  ll
  179  git status 
  180  git add .
  181  git status
  182  git commit -am "commmit sample file on devlop"
  183  ;;
  184  ll
  185  git push
  186  git push origin devlop
  187  git switch main 
  188  ll
  189  touch samplefile_main1.txt
  190  git commit -am "commit sample file on main"
  191  git add .
  192  git commit -am "commit sample file on main"
  193  git statis
  194  git status
  195  git push
  196  ll
  197  git swith devlop
  198  git switch devlop
  199  ll
  200  git pull origin devlop
  201  ll
  202  clear 
  203  ll
  204  git swich main 
  205  git switch main
  206  git pull 
  207   git merge devlop 
  208  ll
  209  git add .
  210  git status 
  211  git pull 
  212  git add /
  213  pwd
  214  git add .
  215   git status
  216  git commit 
  217  git push
  218  history
  219  git log --online 
  220  git log --oneline
  221   vi sampletestfile1 
  222  git commit -am "commit reset 1"
  223  git commit -am "commit reset 1"
  224  git commit -am "commit reset 1"
  225  git add .
  226  git commit -am "commit reset 1"
  227  vi samplefile_main2.txt 
  228  git commit -am "commit reset 2"
  229  git add .
  230  git commit -am "commit reset 2"
  231  git log --oneline
  232   git reset --soft 04b8a88
  233  git log --oneline
  234    cat sampletestfile2.txt 
  235  git status
  236  git log
  237  git log
  238  git log --oneline
  239  git reset --hard 4a50d1b
  240  cat sampletestfile1
  241  cat sampletestfile2
  242  ll
  243  cat sampletestfile1.txt 
  244  cat samplefile_main2.txt 
  245  cat sampletestfile2.txt 
  246  vi  sampletestfile2.txt 
  247  git commit -am "commit revert 1"
  248   vi sampletestfile1.txt 
  249  git commit -am "commit revert 2"
  250  git push
  251  git log --oneline
  252  git log --oneline
  253* 
  254  git log --oneline
  255    git status
  256  git status
  257  git commit -am "first training project"
  258  git status
  259  ll
  260  echo "this is comparsion lecture" >> sampletestfile1.txt 
  261  echo "this is comparsion lecture change in file 2" >> sampletestfile2.txt 
  262  git status
  263  git diff sampletestfile1.txt
  264  git diff
  265  git commit -am "sample commit"
  266  git push
  267  git log --oneline
  268  git diff 563a4ac b97560a
  269  git branch -a
  270  git checkout devlp
  271  git checkout devlop
  272  git checkout main 
  273  git branch -a
  274  git branch hotfix1
  275  git branch -a
  276  ll
  277  git checkout hotfix1 
  278  git branch -a 
  279  ll
  280  git branch -m hotfix1 hot_fix_1
  281  git branch -a
  282  git checout main
  283  git switch main
  284  git branch -d hot_fix_1 
  285  git branch -a 
  286  ls 
  287  git branch -a 
  288  git swithc devlop
  289  git switch devlop 
  290  ll
  291  vi sampletestfile1.txt
  292  git status
  293  git diff 
  294  git diff 
  295  git commit -am "sample merge on devlop"
  296  git checkout main 
  297  ll
  298* 
  299  git log --oneline oneline --graph
  300  git log --online 
  301  git log --oneline  --graph
  302  git checkout devlop
  303  git log --oneline --graph
  304  ll
  305  cat sampletestfile2.txt 
  306  git checkout main 
  307  cat sampletestfile2.txt 
  308   git checkout devlop
  309  git merge main -m "merging main to devlop"
  310  vi sampletestfile2.txt 
  311  vi sampletestfile1.txt 
  312  git status
  313  git add .
  314  git commit 
  315  git log --oneline --graph
  316  git checkout main 
  317  ll
  318  cat sampletestfile1.txt 
  319  git log 
  320  git merge devlop -m "merge devlop to main"
  321  git add .
  322  git commit 
  323  git log --oneline --graph
  324  cat sampletestfile1.txt 
  325  ll
  326  git status
  327  git pull 
  328  echo "this is stash lecture, change in fiel2" >> sampletestfile2.txt 
  329  ll
  330  echo "this is stash lecture, change in fiel2" >> sampletestfile1.txt 
  331  echo "this is stash lecture, change in fiel1" >> sampletestfile1.txt 
  332  git status
  333  git stash
  334  git status
  335  git status
  336  cat sampletestfile1.txt 
  337  ll
  338  echo "this is statsh lecture ,change on main file" >> samplefile_main1.txt 
  339  git status
  340  git commit -am "urgent fix change"
  341  git push
  342  git status
  343  git stash list 
  344  git stash apply
  345  git commit -am "stash  change"
  346    git status
  347  git statsh list 
  348  git stash list 
  349  git stash drop
  350  echo "this is stash lecture, change for untracked files in fiel1" >> sampletestfile1.txt 
  351  git status
  352  echo "this is stash lecture, change for untracked files in fiel1" >> sampletestfile3.txt 
  353  git status
  354  git stash
  355  git status
  356  git stash -a
  357  git status 
  358  git stash
  359  git stash list 
  360  git stash pop
  361  git stash list 
  362  git stash pop
  363  git stash --list 
  364  git stas list
  365  git stash list 
  366  git statis
  367  got status 
  368  git status 
  369    
  370  echo history >> rapagit.txt
  371  cat rapagit.txt 
  372  history 
  373  cp history rapagit.txt 
  374  history > history_for_print.txt
